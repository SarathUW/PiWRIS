{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to PyWRIS This site contains the project documentation for the PyWRIS project. For the full repository, please visit the PyWRIS Github . Table of Contents Home Commands : set of all available functions Project Layout : package structure and layout Tutorials : example usage of selected functions","title":"Home"},{"location":"#welcome-to-pywris","text":"This site contains the project documentation for the PyWRIS project. For the full repository, please visit the PyWRIS Github .","title":"Welcome to PyWRIS"},{"location":"#table-of-contents","text":"Home Commands : set of all available functions Project Layout : package structure and layout Tutorials : example usage of selected functions","title":"Table of Contents"},{"location":"commands/","text":"Commands This page lists all avilable functions. For example usage, please see the Tutorials page. Checking Validity check_valid_states(selected_states) - Check if all listed states are valid check_valid_date_range(start_date, end_date, valid_date_range) - Check if given date range is valid start_date: start date of the data to fetch, formatted as YYYY-MM-DD or as a timestamp end_date: end date of the data to fetch, formatted as YYYY-MM-DD or as a timestamp valid_date_range: a list or tuple containing two elements (valid start and end dates) as strings or timestamps Fetching information get_districts(selected_states) - Get a dictionary of districts in given states get_reservoirs(end_date, start_date, timestep, selected_states, selected_districts, selected_basins, selected_reservoirs) - Get a list of reservoirs and their time series data based on the given arguments end_date: end date of the data to fetch (YYYY-MM-DD) start_date (optional): start date of the data to fetch (YYYY-MM-DD). If left empty, will default to 1991-01-01 timestep (optional): the temporal resolution of the data. If left empty, will default to Daily selected_states: list of state names to filter reservoirs. If no selected_basins are specified, this is required selected_districts: list of district names to filter reservoirs. Use \"all\" to include reservoirs from all districts selected_basins: list of basin names to filter reservoirs. If no selected_states are specified, this is required get_reservoir_data_valid_date_range() - Get the avaliable date range for reservoir data get_reservoir_info(reservoir_name_str) - Get information for specific reservoirs reservoir_name_str: reservoir names, separated by commas, formatted with single quotes get_reservoir_names(states_list_str, districts_names_list_str) - Get the names of reservoirs in specified states and districts states_list_str: state names, separated by commas, formatted with single quotes districts_names_list_str: district names, separated by commas, formatted with single quotes Plotting plot_data(input_object, **args) - General plotting function input_object: the object to plot (an instance of Reservoir, Groundwater, etc.) plot_reservoir(self, columns, title) - Create interactive timeseries plot for reservoir data columns: list of columns to plot. If none, it will default to all numeric columns except \"Date\" title: custom title for the plot","title":"Commands"},{"location":"commands/#commands","text":"This page lists all avilable functions. For example usage, please see the Tutorials page.","title":"Commands"},{"location":"commands/#checking-validity","text":"check_valid_states(selected_states) - Check if all listed states are valid check_valid_date_range(start_date, end_date, valid_date_range) - Check if given date range is valid start_date: start date of the data to fetch, formatted as YYYY-MM-DD or as a timestamp end_date: end date of the data to fetch, formatted as YYYY-MM-DD or as a timestamp valid_date_range: a list or tuple containing two elements (valid start and end dates) as strings or timestamps","title":"Checking Validity"},{"location":"commands/#fetching-information","text":"get_districts(selected_states) - Get a dictionary of districts in given states get_reservoirs(end_date, start_date, timestep, selected_states, selected_districts, selected_basins, selected_reservoirs) - Get a list of reservoirs and their time series data based on the given arguments end_date: end date of the data to fetch (YYYY-MM-DD) start_date (optional): start date of the data to fetch (YYYY-MM-DD). If left empty, will default to 1991-01-01 timestep (optional): the temporal resolution of the data. If left empty, will default to Daily selected_states: list of state names to filter reservoirs. If no selected_basins are specified, this is required selected_districts: list of district names to filter reservoirs. Use \"all\" to include reservoirs from all districts selected_basins: list of basin names to filter reservoirs. If no selected_states are specified, this is required get_reservoir_data_valid_date_range() - Get the avaliable date range for reservoir data get_reservoir_info(reservoir_name_str) - Get information for specific reservoirs reservoir_name_str: reservoir names, separated by commas, formatted with single quotes get_reservoir_names(states_list_str, districts_names_list_str) - Get the names of reservoirs in specified states and districts states_list_str: state names, separated by commas, formatted with single quotes districts_names_list_str: district names, separated by commas, formatted with single quotes","title":"Fetching information"},{"location":"commands/#plotting","text":"plot_data(input_object, **args) - General plotting function input_object: the object to plot (an instance of Reservoir, Groundwater, etc.) plot_reservoir(self, columns, title) - Create interactive timeseries plot for reservoir data columns: list of columns to plot. If none, it will default to all numeric columns except \"Date\" title: custom title for the plot","title":"Plotting"},{"location":"dir/","text":"Project layout .github/workflows/ python-package-conda.yml # lists dependencies docs/ logos/ PyWRIS_logo.png # PyWRIS main image components.md # List of possible use cases and components technology_review_by_library.md # comparisons of 3 possible libraries we considered using, listed by package. technology_review_by_library.md # comparisons of 3 possible libraries we considered using, listed by metrics. user_stories.md # some hypothetical users and their reasons for using PyWRIS src/pywris/ country_data/ state_codes.py # dictionary of all state names and their codes surface_water/ storage/ reservoir.py # defines functions used in reservoir data fetching utils/ fetch_wris.py # get information from the India WRIS website pywris.py # {wip} pywris_main.py # {wip} test/ test_pywris.py # file for testing with pytest LICENSE # licensing information README.md # README file with information to get started pyproject.toml # set up pywris package mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project Layout"},{"location":"dir/#project-layout","text":".github/workflows/ python-package-conda.yml # lists dependencies docs/ logos/ PyWRIS_logo.png # PyWRIS main image components.md # List of possible use cases and components technology_review_by_library.md # comparisons of 3 possible libraries we considered using, listed by package. technology_review_by_library.md # comparisons of 3 possible libraries we considered using, listed by metrics. user_stories.md # some hypothetical users and their reasons for using PyWRIS src/pywris/ country_data/ state_codes.py # dictionary of all state names and their codes surface_water/ storage/ reservoir.py # defines functions used in reservoir data fetching utils/ fetch_wris.py # get information from the India WRIS website pywris.py # {wip} pywris_main.py # {wip} test/ test_pywris.py # file for testing with pytest LICENSE # licensing information README.md # README file with information to get started pyproject.toml # set up pywris package mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"tutorials/","text":"Tutorials Checking validity Check if states are valid check_states = check_valid_states( selected_states = \"'Kerala', 'Bihar'\" ) Fetching data Get a list of districts in a specific state district_list = get_districts( selected_states = \"'Kerala', 'Bihar'\" ) Fetch reservoirs in a specific state and district reservoirs = get_reservoirs( end_date = 2024-01-30, selected_states = \"Kerala\", selected_districts = \"Wayanad\" ) Get available date range for reservoir data {wip} Get the information on a specific resrvoir res_info = get_reservoir_info( reservoir_name_str = \"'Mahi Bajaj Sagar', 'Jawai Dam'\" ) Get the names of reservoirs in a specific state and district res_names = get_reservoir_names( states_list_str = \"'Tamil Nadu', 'Punjab'\" districts_names_list_str = \"'Coimbatore', 'Patiala', 'Salem'\" ) Plotting General plot {wip} plot_object = plot_data( input_object = '' ) Interactive timeseries plot without specifying columns plot_timeseries - plot_reservoir( title = \"An interactive timeseries plot\" )","title":"Tutorials"},{"location":"tutorials/#tutorials","text":"","title":"Tutorials"},{"location":"tutorials/#checking-validity","text":"","title":"Checking validity"},{"location":"tutorials/#check-if-states-are-valid","text":"check_states = check_valid_states( selected_states = \"'Kerala', 'Bihar'\" )","title":"Check if states are valid"},{"location":"tutorials/#fetching-data","text":"","title":"Fetching data"},{"location":"tutorials/#get-a-list-of-districts-in-a-specific-state","text":"district_list = get_districts( selected_states = \"'Kerala', 'Bihar'\" )","title":"Get a list of districts in a specific state"},{"location":"tutorials/#fetch-reservoirs-in-a-specific-state-and-district","text":"reservoirs = get_reservoirs( end_date = 2024-01-30, selected_states = \"Kerala\", selected_districts = \"Wayanad\" )","title":"Fetch reservoirs in a specific state and district"},{"location":"tutorials/#get-available-date-range-for-reservoir-data-wip","text":"","title":"Get available date range for reservoir data {wip}"},{"location":"tutorials/#get-the-information-on-a-specific-resrvoir","text":"res_info = get_reservoir_info( reservoir_name_str = \"'Mahi Bajaj Sagar', 'Jawai Dam'\" )","title":"Get the information on a specific resrvoir"},{"location":"tutorials/#get-the-names-of-reservoirs-in-a-specific-state-and-district","text":"res_names = get_reservoir_names( states_list_str = \"'Tamil Nadu', 'Punjab'\" districts_names_list_str = \"'Coimbatore', 'Patiala', 'Salem'\" )","title":"Get the names of reservoirs in a specific state and district"},{"location":"tutorials/#plotting","text":"","title":"Plotting"},{"location":"tutorials/#general-plot-wip","text":"plot_object = plot_data( input_object = '' )","title":"General plot {wip}"},{"location":"tutorials/#interactive-timeseries-plot-without-specifying-columns","text":"plot_timeseries - plot_reservoir( title = \"An interactive timeseries plot\" )","title":"Interactive timeseries plot without specifying columns"}]}